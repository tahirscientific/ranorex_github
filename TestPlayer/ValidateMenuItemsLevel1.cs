///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace TestPlayer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateMenuItemsLevel1 recording.
    /// </summary>
    [TestModule("7b6c0612-f3dd-4bf4-95d5-99eac9c20da0", ModuleType.Recording, 1)]
    public partial class ValidateMenuItemsLevel1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the TestPlayerRepository repository.
        /// </summary>
        public static TestPlayerRepository repo = TestPlayerRepository.Instance;

        static ValidateMenuItemsLevel1 instance = new ValidateMenuItemsLevel1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateMenuItemsLevel1()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateMenuItemsLevel1 Instance
        {
            get { return instance; }
        }

#region Variables

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Screenshot(ReportLevel.Info, "User", "", repo.Form1.Self, false, new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'VIPlayers23101456.MenuItemPlayers'.", repo.VIPlayers23101456.MenuItemPlayersInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemPlayersInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='&Players') on item 'VIPlayers23101456.MenuItemPlayers'.", repo.VIPlayers23101456.MenuItemPlayersInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemPlayersInfo, "Text", "&Players");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'VIPlayers23101456.MenuItemBonusPoint'.", repo.VIPlayers23101456.MenuItemBonusPointInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemBonusPointInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='&Bonus Point') on item 'VIPlayers23101456.MenuItemBonusPoint'.", repo.VIPlayers23101456.MenuItemBonusPointInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemBonusPointInfo, "Text", "&Bonus Point");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'VIPlayers23101456.MenuItemCalculDePoints'.", repo.VIPlayers23101456.MenuItemCalculDePointsInfo, new RecordItemIndex(5));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemCalculDePointsInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='&Calcul de points') on item 'VIPlayers23101456.MenuItemCalculDePoints'.", repo.VIPlayers23101456.MenuItemCalculDePointsInfo, new RecordItemIndex(6));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemCalculDePointsInfo, "Text", "&Calcul de points");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'VIPlayers23101456.MenuItemEtatsCentralisation'.", repo.VIPlayers23101456.MenuItemEtatsCentralisationInfo, new RecordItemIndex(7));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemEtatsCentralisationInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='&Etats centralisation') on item 'VIPlayers23101456.MenuItemEtatsCentralisation'.", repo.VIPlayers23101456.MenuItemEtatsCentralisationInfo, new RecordItemIndex(8));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemEtatsCentralisationInfo, "Text", "&Etats centralisation");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'VIPlayers23101456.Configuration'.", repo.VIPlayers23101456.ConfigurationInfo, new RecordItemIndex(9));
            Validate.AttributeEqual(repo.VIPlayers23101456.ConfigurationInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='C&onfiguration') on item 'VIPlayers23101456.Configuration'.", repo.VIPlayers23101456.ConfigurationInfo, new RecordItemIndex(10));
            Validate.AttributeEqual(repo.VIPlayers23101456.ConfigurationInfo, "Text", "C&onfiguration");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Visible='True') on item 'VIPlayers23101456.MenuItemFenetre'.", repo.VIPlayers23101456.MenuItemFenetreInfo, new RecordItemIndex(11));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemFenetreInfo, "Visible", "True");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text='&Fenêtre') on item 'VIPlayers23101456.MenuItemFenetre'.", repo.VIPlayers23101456.MenuItemFenetreInfo, new RecordItemIndex(12));
            Validate.AttributeEqual(repo.VIPlayers23101456.MenuItemFenetreInfo, "Text", "&Fenêtre");
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
