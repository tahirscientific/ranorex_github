///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace TestPlayer
{
    public partial class CheckNewPlayerCreatedInDB
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void CheckPlayerCreatedInDB(RepoItemInfo textInfo, string firstName, string lastName)
        {
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'Text' from item 'textInfo' and assigning its value to variable 'CreatedPlayerID'.", textInfo);
            string strCreatedPlayerID = textInfo.FindAdapter<Text>().Element.GetAttributeValueText("Text");
            int playerID = int.Parse(strCreatedPlayerID);
            Report.Info("Created Player ID is " + playerID);
            Report.Info("Created Player FirstName is " + firstName);
            Report.Info("Created Player LastName is " + lastName);
            
            // Connection to the DB
            string connectionString;
            SqlConnection cnn;
            string firstNameDB = "";
            string lastNameDB = "";
        	connectionString = @"Data Source=10.8.14.84;Initial Catalog=Online;User ID=sa;Password=B@lly!01";
        	cnn = new SqlConnection(connectionString);
        	cnn.Open();
        		
        		
        		SqlCommand command;
        		SqlDataReader dataReader;
        		String sql = "";
        		
        		sql = $"SELECT [PLA_FirstName],[PLA_LastName] FROM [Online].[dbo].[T_Player_PLA] WHERE Player_ID='{playerID}'";
        		command = new SqlCommand(sql, cnn);
        		dataReader = command.ExecuteReader();
        		while (dataReader.Read()){
        			firstNameDB = "" + dataReader.GetValue(0);
        			lastNameDB = "" + dataReader.GetValue(1);
        		}
        		Report.Info("firstNameDB is " + firstNameDB);
        		Report.Info("lastNameDB is " + lastNameDB);
        		Ranorex.Validate.AreEqual(firstName, firstNameDB, "comparing first names");
        		Ranorex.Validate.AreEqual(lastName, lastNameDB, "comparing last names");
        		
        	cnn.Close();
        }

    }
}
